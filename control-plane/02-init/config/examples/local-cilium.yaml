apiVersion: kubeadm.k8s.io/v1beta4
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    token: 9a08jv.c0izixklcxtmnze7
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
kind: InitConfiguration
localAPIEndpoint:
  # 优先使用内网IP, 如果不知道,请注释该advertiseAddress参数,k8s会自动获取
  advertiseAddress: 192.168.3.100
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  # 如果初始化失败, 尝试注释name
  name: node1
  taints: null
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
skipPhases:
  - addon/kube-proxy
---
apiServer:
  certSANs:
    - 192.168.3.100
    - 192.168.3.101
    - 192.168.3.102
    - node1
    - node2
    - node3
apiVersion: kubeadm.k8s.io/v1beta4
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
dns: {}
encryptionAlgorithm: RSA-2048
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: registry.aliyuncs.com/google_containers
kind: ClusterConfiguration
kubernetesVersion: 1.32.1
networking:
  dnsDomain: cluster.local
  # serviceSubnet: 192.168.0.0/16
  # podSubnet: 172.0.0.0/16
  podSubnet: 10.244.0.0/16

